import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.sql.*;
import java.sql.ResultSet;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.FlowLayout;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.io.*;
import java.util.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import javax.swing.JTextArea;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hari Bharath
 */
public class hw3 extends javax.swing.JFrame {
	String option = "AND";
	String s = "";
	String s1 = "";
	String s3 = "";
	String semi = "";
	String film = "";
	String s6 = "";
	
    /**
     * Creates new form NewJFrame
     */
    public hw3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    private void initComponents() {
    	

        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jList2.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		country = "";
            	s5 = "";
                HashSet<String> set1 = new HashSet<String>();
                String s1 = " ";
                int i =0;
                for(Object f:jList2.getSelectedValues()){
                	set1.add((String) f);
                }  
                LinkedList<String> list1 = new LinkedList<String>(set1);
                for(int x=0;x<list1.size();x++) {
//                	if(list.size() == 1) {
//                		genre = genre + "'" + list.get(x);
//                	}else {
               		country =  country +  "," + "'" +  list1.get(x) + "'";
//                	}
                }
                for(int j=1;j<country.length();j++) {
                	s5 = s5 + country.charAt(j);
                }
                
                
                System.out.println(s5);
//                for(int x=0;x<set.size();x++) {
//                	
//                }
        	}
        });
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        
        jList3.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		film = "";
            	s6 = "";
                HashSet<String> set2 = new HashSet<String>();
                String s1 = " ";
                int i =0;
                for(Object f:jList3.getSelectedValues()){
                	set2.add((String) f);
                }  
                LinkedList<String> list2 = new LinkedList<String>(set2);
                for(int x=0;x<list2.size();x++) {
//                	if(list.size() == 1) {
//                		genre = genre + "'" + list.get(x);
//                	}else {
               		film =  film +  "," + "'" +  list2.get(x) + "'";
//                	}
                }
                for(int j=1;j<film.length();j++) {
                	s6 = s6 + film.charAt(j);
                }
                
                
                System.out.println(s6);
        		
        		
        	}
        });
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        choice3 = new java.awt.Choice();
        choice3.addItemListener(new ItemListener() {
        	public void itemStateChanged(ItemEvent e) {
        		option = choice3.getItem(choice3.getSelectedIndex());
        		System.out.println(option);
        	}
        });
        
        JLabel lblNewLabel = new JLabel("New label");
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        choice2 = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        choice1 = new java.awt.Choice();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        JLabel lab = new JLabel("New label");
        lab1 = new JLabel("New label");



        
        jButton1.addMouseListener(new MouseAdapter() {
        	@Override
        	
        	
        	public void mouseClicked(MouseEvent e) {
        		int count = 0;

        		if(genre != "" && country != "" && film != "") {
        			String three = "SELECT count(*) as count from movies,m_genres,m_countries,m_locations where movies.m_id = m_genres.m_id and m_genres.m_id = m.countries.m_id and m_countries.m_id = m_locations.m_id and " + "m_genre in (" + s4 + ") " +  option + " m_country in (" + s5 + ") " + option + " m_loc1 in (" + s6 + ")";
        			System.out.println(three);

                    try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(three); 
                      ResultSet rs = stmt.executeQuery(three);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));
                      }
                      
        			
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
        			
        		}
        		else if(genre != "" && country != "") {
         			String a1 = "SELECT count(*) as count from movies,m_genres,m_countries where movies.m_id = m_genres.m_id and m_genres.m_id = m_countries.m_id and " + "m_genre in (" + s4 + ") " +  option + " m_country in (" + s5 + ")";
         			System.out.println(a1);
                    lblNewLabel.setText(a1);

         			

                    try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(a1); 
                      ResultSet rs = stmt.executeQuery(a1);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));
                      }
                      
        			
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
         			
        			
         		}
        		else if(country != "" && film != "") {
        			String a2 = "SELECT count(*) as count from movies,m_countries,m_locations where movies.m_id = m_countries.m_id and m_countries.m_id = m_locations.m_id and m_country in (" + s5 + ")" + option + " m_loc1 in (" + s6 + ")";
        			System.out.println(a2);
                    lblNewLabel.setText(a2);

        			
        			try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(a2); 
                      ResultSet rs = stmt.executeQuery(a2);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));

                      }
                      
        			
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
        			
        		}
        		else if(genre != "" && film != "") {
        			String a3 = "SELECT count(*) as count from movies,m_genres,m_locations where movies.m_id = m_genres.m_id and m_genres.m_id = m_locations.m_id and m_genre in (" + s4 + ") " + option + " m_loc1 in (" + s6 + ")";
        			System.out.println(a3);
                    lblNewLabel.setText(a3);

        			try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(a3); 
                      ResultSet rs = stmt.executeQuery(a3);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));

                      }
                      
        			
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
        		}
        		else if(genre != "") {
    				s =  "SELECT count(*) as count from m_genres,movies where movies.m_id = m_genres.m_id and " + " m_genre in (" + s4 + ")";
    				System.out.println(s);
                    lblNewLabel.setText(s);


                    try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(s); 
                      ResultSet rs = stmt.executeQuery(s);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));
                      }
                      
        			
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
        		}else if(country != "") {
        			s1 = "SELECT count(*) as count from m_countries,movies where movies.m_id = m_countries.m_id and " + "m_country in (" + s5  + ")";
                    System.out.println(s1);
                    lblNewLabel.setText(s1);
                    try {
        				Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection(
                              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
                      Statement stmt = con.createStatement();
                      System.out.println("connected");
                      PreparedStatement prepStat = con.prepareStatement(s1); 
                      ResultSet rs = stmt.executeQuery(s1);
                      while(rs.next()) {
                    	  System.out.println(rs.getString("count"));
                    	  lab1.setText(rs.getString("count"));

                      }
        				
        			}catch(Exception e1) {
                		e1.printStackTrace();
                	}
        		}else if(film != "") {
         			String s3 = "SELECT count(*) as count from m_locations,movies where movies.m_id = m_locations.m_id and " + " m_loc1 in (" + s6 + ")";
                    lblNewLabel.setText(s3);

         			try {
         				Class.forName("com.mysql.jdbc.Driver");
         				Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
         				Statement stmt = con.createStatement();
         				System.out.println("connected");
         				PreparedStatement prepStat = con.prepareStatement(s3);
         				ResultSet rs = stmt.executeQuery(s3);
         				while(rs.next()) {
         					System.out.println(rs.getString("count"));
                      	  lab1.setText(rs.getString("count"));

         				}
         			}catch(Exception e1) {
         				e1.printStackTrace();
         			}
         		}
        		
        	}
        });
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        choice4 = new java.awt.Choice();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();


        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jLabel2.setText("jLabel2");
        choice3.add("AND");
        choice3.add("OR");
        choice1.add("<");
        choice1.add(">");
        choice1.add(">=");
        choice1.add("<=");
        choice1.add("=");
        choice4.add("=");
        choice4.add(">");
        choice4.add("<");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane2.setToolTipText("");

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane5.setViewportView(jTextArea2);

        jPanel3.setBackground(java.awt.Color.darkGray);

        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Search between attributes");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Adventure", "Animation", "Children", "Comedy", "Fantasy", "Romance", "Drama", "Action", "Crime", "Thriller", "Horror", "Mystery", "Sci-Fi", "Imax", "Documentary", "War", "Musical", "Film-Noir", "Western", "Short" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel4.setText("Genres");

        jLabel5.setText("Locations");

        jLabel6.setText("Filming Locations");

        jLabel7.setText("Critics Rating");

        jPanel4.setBackground(java.awt.Color.white);

        jLabel1.setText("Rating");

        jLabel3.setText("No of Reviews");

        jLabel9.setText("Value");

        jLabel10.setText("Value");

        jTextField1.setText("jTextField1");

        jTextField3.setText("jTextField3");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(choice2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jTextField3))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel9)
                .addGap(3, 3, 3)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addGap(2, 2, 2)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(java.awt.Color.white);

        jButton1.setText("Execute Query");
        
        JTextArea textArea = new JTextArea();
        
        
        

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5Layout.setHorizontalGroup(
        	jPanel5Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel5Layout.createSequentialGroup()
        			.addContainerGap(223, Short.MAX_VALUE)
        			.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 181, GroupLayout.PREFERRED_SIZE)
        			.addGap(216))
        		.addGroup(Alignment.LEADING, jPanel5Layout.createSequentialGroup()
        			.addGap(17)
        			.addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(lab1)
        				.addGroup(jPanel5Layout.createSequentialGroup()
        					.addComponent(lblNewLabel)
        					.addGap(246)
        					.addComponent(textArea, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap(295, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
        	jPanel5Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel5Layout.createSequentialGroup()
        			.addGap(53)
        			.addGroup(jPanel5Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblNewLabel)
        				.addComponent(textArea, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
        			.addComponent(jButton1)
        			.addGap(30)
        			.addComponent(lab1)
        			.addGap(21))
        );
        jPanel5.setLayout(jPanel5Layout);

        jPanel6.setBackground(java.awt.Color.white);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );

        jLabel12.setText("Movie date");

        jLabel13.setText("Movie Tag Values");

        jPanel7.setBackground(java.awt.Color.white);

        jLabel14.setText("Tag Weight");

        jLabel15.setText("Value");

        jTextField2.setText("jTextField2");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(choice4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(java.awt.Color.white);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(jLabel11)
                                        .addGap(666, 666, 666))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 3, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(86, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();

        try {
    		String temp = "";
          Class.forName("com.mysql.jdbc.Driver");
          Connection con = DriverManager.getConnection(
                  "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
          Statement stmt = con.createStatement();
          System.out.println("connected");
          DefaultListModel<String> m = new DefaultListModel();
          String s = "SELECT distinct m_genre from m_genres";
          ResultSet rs = stmt.executeQuery(s);
          while(rs.next()) {
        	  String s1 = rs.getString("m_genre");
        	  m.addElement(s1);
          }
          jList1.setModel(m);
          
    }catch(Exception e) {
    	e.printStackTrace();
    }
        
        try {
    		String temp = "";
          Class.forName("com.mysql.jdbc.Driver");
          Connection con = DriverManager.getConnection(
                  "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
          Statement stmt = con.createStatement();
          System.out.println("connected");
          DefaultListModel<String> m = new DefaultListModel();
          String s = "SELECT distinct m_loc1 from m_locations";
          ResultSet rs = stmt.executeQuery(s);
          while(rs.next()) {
        	  String s1 = rs.getString("m_loc1");
        	  m.addElement(s1);
          }
          jList3.setModel(m);
          
    }catch(Exception e) {
    	e.printStackTrace();
    }
        
        
        
    try {
		String temp = "";
      Class.forName("com.mysql.jdbc.Driver");
      Connection con = DriverManager.getConnection(
              "jdbc:mysql://localhost:3306/IMDB_info", "root", "hari");
      Statement stmt = con.createStatement();
      System.out.println("connected");
      DefaultListModel<String> m = new DefaultListModel();
      String s = "SELECT distinct m_country from m_countries";
      ResultSet rs = stmt.executeQuery(s);
      while(rs.next()) {
    	  String s1 = rs.getString("m_country");
    	  m.addElement(s1);
      }
      jList2.setModel(m);
      
}catch(Exception e) {
	e.printStackTrace();
}
    

    }                       
    String genre = "";
    String country = "";
    String s4 ="";
    String s5 ="";

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
//        String arr=jList1.getSelectedValues().toString();
    	genre = "";
    	s4 = "";
        HashSet<String> set = new HashSet<String>();
        String s = " ";
        int i =0;
        for(Object f:jList1.getSelectedValues()){
        	set.add((String) f);
        }  
        LinkedList<String> list = new LinkedList<String>(set);
        for(int x=0;x<list.size();x++) {
//        	if(list.size() == 1) {
//        		genre = genre + "'" + list.get(x);
//        	}else {
       		genre =  genre +  "," + "'" +  list.get(x) + "'";
//        	}
        }
        for(int j=1;j<genre.length();j++) {
        	s4 = s4 + genre.charAt(j);
        }
        
        
        System.out.println(s4);
//        for(int x=0;x<set.size();x++) {
//        	
//        }
//        
    }

   
    
    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        JFrame frame = new JFrame("NewJFrame");
        frame.getContentPane().setLayout(new FlowLayout()); 
       
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hw3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private java.awt.Choice choice1;
    private java.awt.Choice choice2;
    private java.awt.Choice choice3;
    private java.awt.Choice choice4;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private JLabel lab1;
}